public class Solution {
        public boolean mark[][] = new boolean[1000][1000];
    public int black(ArrayList<String> A) {
        int size = A.size();
        int i,j,count=0;
        for(i=0;i<size;i++)
        {
        for(j=0;j<A.get(i).length();j++)
        {
            if(mark[i][j]==false&&A.get(i).charAt(j)=='X')
            {
                count++;
                dfs(A,mark,i,j);
            }
        }
        }
        return count;
    }
        public void dfs(ArrayList<String>A,boolean mark[][],int a,int b)
        {
            mark[a][b] = true;
            int dir[][] = {{0,1},{0,-1},{1,0},{-1,0}};
            for(int k = 0; k < 4; k++)
            {
                int i = a+dir[k][0];
                int j = b+dir[k][1];
                if(i>=0&&i<A.size()&&j>=0&&j<A.get(0).length()&&A.get(i).charAt(j)=='X'&&mark[i][j]==false)
                {
                    dfs(A,mark,i,j);
                }
            }
        }   
}
